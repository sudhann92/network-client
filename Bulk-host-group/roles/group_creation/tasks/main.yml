---
# Add the group in controller node by using awx.awx.group colletion module and used the loop to get the multiple group and create in the single inventory
- name: Add controller group  
  awx.awx.group:
    name:                           "{{ controller_groups_name_item.group_name | mandatory }}"
    new_name:                       "{{ controller_groups_name_item.new_name | default(omit, true) }}"
    description:                    "{{ controller_groups_name_item.description | default(omit, true) }}"
    inventory:                      "{{ controller_inventory_name | mandatory }}"
    variables:                      "{{ controller_groups_name_item.variables | default(omit, true) | regex_replace('[ ]{2,}', '') }}"
    hosts:                          "{{ (controller_groups_name_item.hosts|default(omit, true)).split(',') }}"
    children:                       "{{ controller_groups_name_item.children | default(omit, true) }}"
    preserve_existing_hosts:        "{{ controller_groups_name_name_item.preserve_existing_hosts | default(omit) }}"
    preserve_existing_children:     "{{ controller_groups_name_name_item.preserve_existing_children | default(omit) }}"
    state:                          "{{ controller_groups_name_name_item.state | default(controller_state | default('present')) }}"
    controller_username:            "{{ controller_username | default(omit, true) }}"
    controller_password:            "{{ controller_password | default(omit, true) }}"
    controller_oauthtoken:          "{{ controller_oauthtoken | default(omit, true) }}"
    controller_host:                "{{ controller_hostname| default(omit, true) }}"
    controller_config_file:         "{{ controller_config_file | default(omit, true) }}"
    validate_certs:                 "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ controller_groups_name }}"
  loop_control:
    loop_var: controller_groups_name_item
  no_log: "{{ controller_group_secure_logging }}"
  async: 1000
  poll: 0
  register: group_job_async
  changed_when: not group_job_async.changed
  vars:
    ansible_async_dir: '/tmp/.ansible_async'

- name: "Wait for finish the Controller Group creation"
  ansible.builtin.async_status:
    jid: "{{ group_job_async_results_item.ansible_job_id }}"
  register: group_job_async_result
  until: group_job_async_result.finished
  retries: "{{ controller_configuration_group_async_retries }}"
  delay: "{{ controller_configuration_group_async_delay }}"
  loop: "{{ group_job_async.results }}"
  loop_control:
    loop_var: group_job_async_results_item
  when: group_job_async_results_item.ansible_job_id is defined
  no_log: "{{ controller_configuration_group_secure_logging }}"
  vars:
    ansible_async_dir: '/tmp/.ansible_async'